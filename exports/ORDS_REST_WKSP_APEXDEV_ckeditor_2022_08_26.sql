
-- Generated by ORDS REST Data Services 22.2.1.r2021302
-- Schema: WKSP_APEXDEV  Date: 金 8月  26 02:43:16 2022 
--

DECLARE
  l_roles     OWA.VC_ARR;
  l_modules   OWA.VC_ARR;
  l_patterns  OWA.VC_ARR;

BEGIN
  ORDS.ENABLE_SCHEMA(
      p_enabled             => TRUE,
      p_schema              => 'WKSP_APEXDEV',
      p_url_mapping_type    => 'BASE_PATH',
      p_url_mapping_pattern => 'apexdev',
      p_auto_rest_auth      => FALSE);
    
  ORDS.DEFINE_MODULE(
      p_module_name    => 'ckeditor',
      p_base_path      => '/ckeditor/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ckeditor',
      p_pattern        => 'image',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ckeditor',
      p_pattern        => 'image',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
    l_id cke_images.id%type;
    C_NAMESPACE  constant varchar2(20) := ''CHANGE'';
    C_BUCKET     constant varchar2(10) := ''images'';
    C_REGION     constant varchar2(20) := ''us-ashburn-1'';
    C_CREDENTIAL constant varchar2(20) := ''MY_OCI_CRED'';
    l_object_name varchar2(4000);
    l_put_response dbms_cloud_oci_obs_object_storage_put_object_response_t;
    l_status_code integer;
    file_upload_error exception;
begin
    /*
     * 画像はオブジェクト・ストレージにアップロードする。ここでは単にIDを取得する。
     * :content_typeはORDSが設定してくれている。
     * :current_userはAPEXセッションによる保護をかけた場合、APP_USERになる。
     */
    insert into cke_images(content_type, created_by, created) 
        values(:content_type, :current_user, sysdate)
        returning id into l_id;
    /*
     * アップロードされてきた画像をオブジェクト・ストレージにアップロードする。
     */
    l_put_response := dbms_cloud_oci_obs_object_storage.put_object
    (
	    namespace_name => C_NAMESPACE
        , bucket_name => C_BUCKET
        , object_name => l_id
 ' || '       , content_type => :content_type
        , put_object_body => :body
	    , region => C_REGION
	    , credential_name => C_CREDENTIAL
    );
    l_status_code := l_put_response.status_code;
    if l_status_code != 200 then
        raise file_upload_error;
    end if;
    l_object_name := ''https://objectstorage.'' || C_REGION || ''.oraclecloud.com/n/''
        || C_NAMESPACE || ''/b/'' || C_BUCKET || ''/o/'' || l_id;
    :status_code := 201;
    /*
     * アップロードに成功した場合は、urlとしてダウンロードするリンクをJSON形式で返す。
     */
    apex_json.open_object;
    apex_json.write(
        p_name => ''url'',
        p_value => l_object_name
    );
    apex_json.close_object;
exception
when others then
    /* エラーを返す。
     * {
     *   "error": {
     *       "message": "Something wrong!"
     *   }
     *  }
     */
    apex_json.open_object;
    apex_json.open_object(''error'');
    apex_json.write(''message'', ''Something wrong!'');
    apex_json.close_object;
    apex_json.close_object;
e' || 'nd;');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ckeditor',
      p_pattern        => 'image/:id',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ckeditor',
      p_pattern        => 'image/:id',
      p_method         => 'GET',
      p_source_type    => 'resource/lob',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select content_type, image from cke_images where id = :id');

    
    
  l_roles(1) := 'RESTful Services';
  l_modules(1) := 'ckeditor';

  ORDS.DEFINE_PRIVILEGE(
      p_privilege_name => 'ckeditor',
      p_roles          => l_roles,
      p_patterns       => l_patterns,
      p_modules        => l_modules,
      p_label          => '画像付き文書',
      p_description    => NULL,
      p_comments       => NULL);

  l_roles.DELETE;
  l_modules.DELETE;
  l_patterns.DELETE;
        
COMMIT;

END;
